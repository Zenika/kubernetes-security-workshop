apiVersion: v1
kind: Namespace
metadata:
  name: app
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: app
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: eu.gcr.io/kubernetes-security-workshop/frontend:1
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: API_URL
          value: http://backend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: app
spec:
  selector:
    app: frontend
  ports:
  - name: http-frontend
    port: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: app
  annotations:
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - http:
      paths:
      - path: /frontend
        backend:
          serviceName: frontend
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: app
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: eu.gcr.io/kubernetes-security-workshop/backend:1
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: REDIS_URL
          value: redis:6379
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
  namespace: app
spec:
  selector:
    app: backend
  ports:
  - name: http-backend
    port: 80
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: redis
  namespace: app
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: eu.gcr.io/kubernetes-security-workshop/redis:5
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: app
  labels:
    app: redis
spec:
  ports:
  - port: 6379
  selector:
    app: redis
